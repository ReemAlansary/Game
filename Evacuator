package model.units;

import model.events.WorldListener;
import model.infrastructure.ResidentialBuilding;
import model.people.CitizenState;
import model.people.Citizen;
import simulation.Address;

public class Evacuator extends PoliceUnit{
	
	
	public Evacuator(String id, Address location, int stepsPerCycle,WorldListener worldListener,int maxCapacity) {
		super(id,location,stepsPerCycle,worldListener,maxCapacity);
	}

	public void treat() {
		super.treat();//how do i make it start treating in the next cycle?
		if(getTarget() instanceof ResidentialBuilding) {
			ResidentialBuilding rb = (ResidentialBuilding) getTarget();
			for(int i = 0; i<rb.getOccupants().size() & i<getMaxCapacity(); i++) 
				getPassengers().add(rb.getOccupants().remove(i));
		}
	}
	
	public void goToBase() {
		if(getDistanceToBase()>0) {
			setDistanceToBase(getDistanceToBase()-getStepsPerCycle());
		}else {
			for(Citizen c : getPassengers()) {
				c.setState(CitizenState.RESCUED);
				getWorldListener().assignAddress(c, 0, 0);
			}
			getWorldListener().assignAddress(this, 0, 0);
			calculateDistanceToTarget();
		}		
	}
	
	
}

